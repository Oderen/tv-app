{"version":3,"file":"static/js/206.6d2297f9.chunk.js","mappings":"6KA8DA,UAxDiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,+GAEQC,MAAM,WAAD,OARpB,yBAQoB,0BAFb,WAETC,EAFS,QAIDC,GAJC,sBAKP,IAAIC,MAAM,SALH,uBAQIF,EAASG,OARb,OAQTC,EARS,OASfC,QAAQC,IAAIF,GACZR,EAASQ,GAVM,kDAYfC,QAAQC,IAAR,MAZe,0DAAH,qDAgBhBR,GACD,GAAE,KAED,gBAAKS,UAAU,MAAf,UACE,eAAIC,MAAO,CAAEC,QAAS,EAAGC,UAAW,IAApC,SACGf,EAAMgB,KACL,YAOO,IAAD,IANJC,KACEC,EAKE,EALFA,GACSC,EAIP,EAJFC,MAASD,OACTE,EAGE,EAHFA,KACAC,EAEE,EAFFA,OAGF,OACE,eAAaT,MAAO,CAAEU,QAAS,OAAQR,UAAW,IAAlD,UACE,UAAC,KAAD,CAAMS,GAAE,WAAMN,GAAd,WACE,gBACEO,IAAG,UAAKN,GACRO,IAAG,UAAKL,GACRR,MAAO,CAAEc,YAAa,OAExB,4BACE,kCAAUN,MACV,oCAAYC,EAAOM,kBAThBV,EAcZ,OAKV,C,sBC5DD,SAASW,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["pages/HomePage.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst baseURL = 'https://api.tvmaze.com';\n\nconst HomePage = () => {\n  const [shows, setShows] = useState([]);\n\n  useEffect(() => {\n    const fetchShows = async () => {\n      try {\n        const response = await fetch(`\n      ${baseURL}/search/shows?q=girls`);\n        if (!response.ok) {\n          throw new Error('Error');\n        }\n\n        const data = await response.json();\n        console.log(data);\n        setShows(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchShows();\n  }, []);\n  return (\n    <div className=\"App\">\n      <ul style={{ padding: 0, marginTop: 40 }}>\n        {shows.map(\n          ({\n            show: {\n              id,\n              image: { medium },\n              name,\n              rating,\n            },\n          }) => {\n            return (\n              <li key={id} style={{ display: 'flex', marginTop: 20 }}>\n                <Link to={`/${id}`}>\n                  <img\n                    src={`${medium}`}\n                    alt={`${name}`}\n                    style={{ marginRight: 20 }}\n                  />\n                  <div>\n                    <p>Name: {name}</p>\n                    <p>Rating: {rating.average}</p>\n                  </div>\n                </Link>\n              </li>\n            );\n          }\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default HomePage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","shows","setShows","useEffect","fetchShows","fetch","response","ok","Error","json","data","console","log","className","style","padding","marginTop","map","show","id","medium","image","name","rating","display","to","src","alt","marginRight","average","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}